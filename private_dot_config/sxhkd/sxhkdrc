### WM INDEPENDENT HOTKEYS ###
super + d
    rofi -show drun -show-icons -matching fuzzy -theme ~/.config/rofi/themes/onedark.rasi -location 2

# Pass + AWSMenu
super + shift + {a,s,x}
  /home/alan/.config/rofi/scripts/{passmenu,passmenu --type,awsmenu}

# Bookmarks search
super + b
  /usr/bin/buku-rofi

super + Return
  /home/alan/bin/start-preferred-terminal --tmux

super + shift + Return
  /home/alan/bin/start-preferred-terminal

super + {_,shift + ,ctrl + shift +,ctrl +}{0-9}
  ;~/bin/bspwm_dynamic_desktops {--df,--ns,--nm,--da} {0-9}

#super + shift + {1,2,3,4,5,6,7,8,9,0}
#  id=$(bspc query --nodes --node);
#  bspc node --to-desktop {1,2,3,4,5,6,7,8,9,0};
#  bspc desktop --focus next;
#  bspc node --focus ${id}

super + Delete ; {e,s,h,S,r,l}
  {bspc quit,sudo systemctl suspend,sudo systemctl hibernate,sudo systemctl poweroff,sudo systemctl reboot,xsecurelock}

super + shift + v ; {b,B,c,C}
  {nmcli connection up Bashton\ \(openvpn\),nmcli connection down Bashton\ \(openvpn\),nmcli connection up Claranet,nmcli connection down Claranet}

super + Escape + {h,w}
  pkill -USR1 -x {sxhkd,bspwm}

# Switch windows via direction
super + {j,k,l,semicolon}
  bspc node -f {west,north,south,east}

super + f
  if [ -z "$(bspc query -N -n focused.fullscreen)" ]; then \ 
    bspc node focused -t fullscreen; \ 
  else \ 
    bspc node focused -t tiled; \ 
  fi

super + alt + l
  ~/bin/screen-lock

super + shift + q
  bspc node -c

# Move desktop to screen in direction
super + shift + alt + {j,semicolon}
  desk=`bspc query -D -d focused`; \
  bspc desktop -m {prev,next}; \
  bspc monitor -f {prev,next}; \
  bspc desktop -f $desk

# Screen shots
Print ; {a,shift+a,s,shift+s,r,shift+r,m,shift+m,g,shift+g}
  ~/.config/i3/scripts/screenshot/{active_window.sh -clipboard,active_window.sh,screen.sh -clipboard,screen.sh,rectangle.sh -clipboard,rectangle.sh,monitor.sh -clipboard,monitor.sh,gif.sh -clipboard,gif.sh}

#shift + Print
#    copyq && maim -s --format png /dev/stdout | copyq copy image/png -
#
#alt + Print
#    copyq && maim -s ~/screen-$(date +%F-%T).png
#
#ctrl + alt + Delete
#    xkill
#
#alt + space
#    $HOME/projects/benoth/i3-hud-menu/i3-hud-menu-rofi.py
#
#

# make sxhkd reload its configuration files
super + shift + r
  pkill -SIGUSR1 sxhkd; \
  $HOME/.config/polybar/launch.sh;

#### BSPWM HOTKEYS ###
#
## close and kill
#ctrl + alt + {_,shift + }x
#    bspc node {-c,-k}
#
## alternate between the tiled and monocle (maximized) layout
#ctrl + alt + f
#    bspc desktop -l next
#
## hide current node
#ctrl + alt + v
#    bspc node -g hidden
#
## un-hide all nodes
#ctrl + alt + shift + v
#    bspc query -N -n .hidden | xargs -I winID bspc node winID -g hidden=off
#
## balance tree
#ctrl + alt + shift + b
#    bspc node @/ {-B,-E}
#
## swap the current node and the biggest node
#ctrl + alt + b
#    bspc node -s biggest.local
#
## if the current node is automatic, send it to the last manual, otherwise pull the last leaf
#ctrl + alt + y
#    bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused
#
#
#### FOCUS/SWAP ###
#
## focus or send to the given desktop
#super + {_,alt + }{ampersand,eacute,quotedbl,apostrophe,parenleft,minus,egrave,underscore,ccedilla,agrave}
#    bspc {desktop -f,node -d} '^{1,2,3,4,5,6,7,8,9,10}'
#
## switch screen, keep monocle state
#ctrl + alt + a
#    CUR_NODE=$(bspc query -N -n) ; \
#    IS_MONOCLE=$(bspc query -T -d | grep '"layout":"monocle"' | wc -l) ; \
#    bspc node -m next ; \
#    [[ $IS_MONOCLE == "1" ]] && bspc desktop -l tiled ; \
#    bspc node -f $CUR_NODE ; \
#    [[ $IS_MONOCLE == "1" ]] && bspc desktop -l monocle
#
## focus the next monitor
#ctrl + alt + e
#    bspc monitor -f next
#
## rotate the nodes (split horizontally)
#ctrl + alt + r
#    bspc node @/ -R 90
#
## focus the next/previous local desktop
#ctrl + alt + shift + {Left,Right}
#    node=$(bspc query -N -n) ; \
#    dir='{prev,next}' ; \
#    bspc node -d ${dir}.local ; \
#    bspc desktop -f ${dir}.local ; \
#    bspc node -f ${node}
#
## focus the node in the given direction
#ctrl + alt + {z,q,s,d}
#    bspc node -f {north,west,south,east}
#
## switch the node in the given direction
#ctrl + alt + shift + {z,q,s,d}
#    node=$(bspc query -N -n) ; \
#    bspc node -s {north,west,south,east} ; \
#    bspc node -f ${node}
#
## focus the next/previous "active monitor" node
#alt + {_,shift + }Tab
#    bspc node -f {next,prev}.active
#
## focus the next/previous local node
#ctrl + alt + {_,shift + }Tab
#    bspc node -f {next,prev}.local
#
## focus the last node
#super + Tab
#    bspc node -f last
#
## focus the next monitor
#super + alt + Tab
#    bspc monitor -f next
#
## focus the next/previous monitor
#ctrl + alt + {Up,Down}
#    bspc monitor -f {west,east}
#
## focus the next/previous desktop
#alt + super + {_,shift + }Tab
#    bspc desktop -f {prev,next}
#
## focus the next/previous local desktop
#ctrl + alt + {w,c}
#    bspc desktop -f {prev,next}.local
#
## focus the next/previous local desktop
#ctrl + alt + {Left,Right}
#    bspc desktop -f {prev,next}.local
#
## focus the older or newer node in the focus history
#super + {o,i}
#    bspc wm -h off; \
#    bspc node {older,newer} -f; \
#    bspc wm -h on
#
## Update node layer
#super + Page_Up
#    bspc node --layer above
#
#super + Home
#    bspc node --layer normal
#
#super + Page_Down
#    bspc node --layer below
#
#
#### STATE/FLAGS ###
#
## set the window state
#ctrl + alt + {t,y,g,h}
#    bspc node -t {tiled,pseudo_tiled,fullscreen,floating}
#
## set the node flags
#ctrl + alt + {j,k,l}
#    bspc node -g {private,sticky,locked}
#
#super + alt + p
#    bspc config focus_follows_pointer {true,false}
#
#
#### PRESELECT ###
#
## preselect or cancel the direction
#super + p ; {z,q,s,d,space}
#    bspc node -p {north,west,south,east,cancel}
#
## cancel the preselection for the focused desktop
#super + p ; Escape
#    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel
#
## preselect the ratio
#super + p ; {ampersand,eacute,quotedbl,apostrophe,parenleft,minus,egrave,underscore,ccedilla}
#    bspc node -o 0.{1,2,3,4,5,6,7,8,9}
#
## Toggle tray visibility
#super + p ; {super + ,_}t
#    systray {stop,run}
#
#
#### MOVE/RESIZE ###
#
## resize a tiled node
#super + ctrl + {z,q,s,d}
#    ~/.config/bspwm/resize-node.sh {north,west,south,east}
#
## move a floating node
#super + {Left,Down,Up,Right}
#    bspc node -v {-20 0,0 20,0 -20,20 0}
#
## expand a window by moving one of its side outward
#super + alt + {Left,Down,Up,Right}
#    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}
#
## contract a window by moving one of its side inward
#super + ctrl + alt + {Left,Down,Up,Right}
#    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}
#
#
#### SCRATCHPAD ###
#super + alt + n
#    ~/.config/bspwm/scratchpad.sh toggle-flag
#
#super + n
#    ~/.config/bspwm/scratchpad.sh switch-app
#
#
#### SPECIAL KEYS ###
XF86Music
  {switch-or-run "cmus.URxvt" ,_} cmus-window

XF86AudioMedia
  {switch-or-run "cmus.URxvt" ,_} cmus-window

XF86Audio{Prev,Next}
  playerctl {previous,next}

XF86AudioPlay
  playerctl play-pause

XF86AudioPause
  playerctl pause

XF86Audio{LowerVolume,RaiseVolume}
  pactl set-sink-volume $(pactl info | grep 'Default Sink:' | cut -d' ' -f3) {-,+}2

XF86AudioMute
  pactl set-sink-mute $(pactl info | grep 'Default Sink:' | cut -d' ' -f3) toggle

XF86Calculator
  {switch-or-run "gnome-calculator.Gnome-calculator" ,_} gnome-calculator

XF86Explorer
  nautilus

XF86HomePage
  {switch-or-run "chromium-browser.chromium-browser" ,_} chromium-browser

XF86WWW
  {switch-or-run "chromium-browser.chromium-browser" ,_} chromium-browser

XF86Search
  {switch-or-run "chromium-browser.chromium-browser" ,_} chromium-browser

XF86Mail
  {switch-or-run "([A-Za-z0-9]*)\.Thunderbird" ,_}thunderbird

XF86Messenger
  pidgin


#### MOUSE ###

# focus
# ~button{1-3}
#     ; bspc node pointed -f

# Resize is now handled directly in bspwm with pointer_modifer and pointer_action
# # start move/resize
# super + button{1-3}
#   ; bspc node pointed -g {move,resize_side,resize_corner}
# # end move/resize
# super + @button{1-3}
#   bspc node pointed -u


# Remove receptacles :
# for win in `bspc query -N -n .leaf.!window`; do bspc node $win -k ; done;
