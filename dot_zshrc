# {{{ Enable Powerlevel10k instant prompt.
# Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
# }}}
# {{{ SSH agent
if [ -z "$SSH_AUTH_SOCK" ];
then
    export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"
fi
# }}}
# {{{ Aliases
# {{{ Easier navigation
## .., ..., ...., ....., and -
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias -- -="cd -"

alias cdd="cd ~/Downloads/"
alias cdg="cd ~/git/"
alias cdot="chezmoi cd"
alias cdgo="cd \$GOPATH"
# }}}
# {{{ Archlinux specific aliases
alias makepkg='chrt --idle 0 ionice -c idle makepkg'
# }}}
# {{{ Misc
alias awseval='function(){eval $(command assume-role $@);}'
alias awsconsole='~/git/awsconsole/awsconsole -b google-chrome-stable'
alias ewm='cd ~/git/ewmg'
alias fpm='docker run --rm -v "${WORKSPACE}:/source" -v /etc/passwd:/etc/passwd:ro --user=$(id -u):$(id -g) claranet/fpm'
alias jctlw='sudo journalctl -u wpa_supplicant@wlp58s0'
alias key='ssh-add ~/git/ssh_keys/id_bashton_alan'
alias keyb='ssh-add ~/git/ssh_keys/id_bashton'
alias keycl='ssh-add -D'
alias keyp='ssh-add ~/git/ssh_keys/id_personal'
alias keypa='ssh-add ~/git/ssh_keys/id_alan-aws'
alias keypo='ssh-add ~/git/ssh_keys/id_personal_old'
alias kmse='export EYAML_CONFIG=$PWD/.kms-eyaml.yaml'
alias misg='cd ~/git/missguided'
alias rewifi='sudo systemctl restart wpa_supplicant@wlp58s0'
alias sdl='cd ~/git/superdry/laguna'
alias sde='cd ~/git/superdry/superdry-everest'
alias sdm='cd ~/git/superdry/superdry-maverick'
alias sdo='cd ~/git/superdry/osaka'
alias sdw='cd ~/git/superdry/windcheater'
alias sdh='cd ~/git/superdry/superdry-henley'
# alias sleep="i3lock && sudo systemctl suspend"
alias snowrep='~/git/bashton-servicenow/reports.py'
alias snowtick='~/git/bashton-servicenow/view-ticket.py --nobox'
alias suspend='xscreensaver-command -lock && sleep 1 && sudo systemctl suspend'
alias tf='terraform'
alias tw='task +work'
alias tp='task +personal'
alias vim='nvim'
alias vi='nvim'
alias gpu-on='sudo tee /proc/acpi/bbswitch <<<ON'
alias gpu-off='sudo tee /proc/acpi/bbswitch <<<OFF'

if uname -a | grep 'Darwin' &> /dev/null; then
  alias ll='ls -G';
  alias ls='ls -G';
else
  alias ll='exa -l --grid --git';
  alias ls='exa';
  alias lt='exa --tree --git --long';
fi
# }}}
# }}}
# {{{ Environment variables
export ARDUINO_PATH='/usr/share/arduino'
export AWS_DEFAULT_REGION='eu-west-1'
export EDITOR='vim'
export GOPATH='/home/alan/go'
export HISTCONTROL=ignoredups:ignorespace
export HOMEBREW_CASK_OPTS='--appdir=/Applications'
export PATH="$PATH:/usr/local/sbin"
export PATH="$PATH:/home/alan/.gem/ruby/2.4.0/bin"
export PATH="$PATH:/home/alan/go/bin"
export PATH="$PATH:/home/alan/bin"
export PATH="$PATH:/home/alan/.local/bin"
export PATH="$PATH:/home/alan/.gem/ruby/2.5.0/bin"
export PATH="$PATH:/home/alan/.gem/ruby/2.6.0/bin"
# }}}
# {{{ ZSH Options
KEYTIMEOUT=1
# }}}

export ZPLUG_HOME="$HOME/.local/share/zplug"
if [ ! -e "$ZPLUG_HOME" ]; then
  git clone https://github.com/zplug/zplug "$ZPLUG_HOME"
fi

source "$ZPLUG_HOME/init.zsh"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug "Dbz/kube-aliases"
zplug "chriskempson/base16-shell"
zplug "fabiokiatkowski/exercism.plugin.zsh"
zplug "joepvd/zsh-hints"
zplug "kiurchv/asdf.plugin.zsh", defer:2
zplug "macunha1/zsh-terraform"
zplug "marzocchi/zsh-notify"
zplug "molovo/tipz"
zplug "qoomon/zsh-lazyload"
zplug "romkatv/powerlevel10k", as:theme, depth:1
zplug "softmoth/zsh-vim-mode"
zplug "unixorn/kubectx-zshplugin"
zplug "zsh-users/zsh-completions"
zplug "weizard/assume-role"
zplug "plugins/aws",   from:oh-my-zsh

# if command -v fasd &> /dev/null; then
#   if command -v fzf &> /dev/null; then
zplug "wookayin/fzf-fasd"
  # fi
# fi

# zplug "tevren/gitfast-zsh-plugin"
# zplug "hschne/fzf-git"

# Then, source plugins and add commands to $PATH
zplug load

# plugins=(
#   # assume-role
#   # command-not-found
#   adb
#   alias-finder
#   ansible
#   archlinux
#   asdf
#   autopep8
#   aws
#   battery
#   bgnotify
#   colorize
#   docker
#   docker-compose
#   dotenv
#   fzf
#   git
#   git-auto-fetch
#   git-extras
#   git-prompt
#   gitfast
#   golang
#   gpg-agent
#   jsontools
#   kube-ps1
#   kubectl
#   man
#   minikube
#   nmap
#   node
#   npm
#   pass
#   pep8
#   python
#   ripgrep
#   ssh-agent
#   sudo
#   systemd
#   terraform
#   tig
#   vi-mode
#   yarn
# )

autoload bashcompinit
bashcompinit

# {{{ Source existing files bash helpers
SOURCE_FILES=(
    # "$HOME/git/bashton-my-aws/functions"
    "$HOME/git/bashton-sshuttle/sshuttle-vpn"
    "$HOME/puppet-log-reader/bash-functions.sh"
    /usr/share/doc/pkgfile/command-not-found.bash
)

for FILE in "${SOURCE_FILES[@]}";
do
    if [ -e "$FILE" ];
    then
        source "$FILE"
    fi
done
# }}}
# {{{ ranger cd
function rcd {
    # create a temp file and store the name
    tempfile="$(mktemp -t tmp.XXXXXX)"

    # run ranger and ask it to output the last path into the
    # temp file
    ranger --choosedir="$tempfile" "${@:-$(pwd)}"

    # if the temp file exists read and the content of the temp
    # file was not equal to the current path
    test -f "$tempfile" &&
    if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
        # change directory to the path in the temp file
        cd -- "$(cat "$tempfile")"
    fi

    # its not super necessary to have this line for deleting
    # the temp file since Linux should handle it on the next
    # boot
    rm -f -- "$tempfile"
}
# }}}

if ! command -v assume-role &>/dev/null; then
  go get -u github.com/alanjjenkins/assume-role
fi

set -o vi
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

(( $+commands[fasd] )) && eval "$(fasd --init auto)"
